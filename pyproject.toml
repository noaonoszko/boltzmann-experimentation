[project]
name = "boltz"
version = "0.1.0"
description = "Experiments for the boltzmann project."
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "bt-decode==0.2.0a0",
    "bittensor>=8.2.0",
    "boto3>=1.35.36",
    "safetensors>=0.4.5",
    "torch>=2.4.1",
    "transformers>=4.45.2",
    "python-dotenv>=1.0.1",
    "datasets>=3.0.1",
    "torchvision>=0.19.1",
    "wandb>=0.18.3",
    "numpy>=2.0.2",
    "aioboto3>=13.2.0",
    "loguru>=0.7.2",
    "uvloop>=0.21.0",
    "aiofiles>=24.1.0",
    "ruff>=0.6.9",
    "ipython>=8.28.0",
    "pydantic>=2.9.2",
    "pydantic-settings>=2.6.0",
    "matplotlib>=3.9.2",
    "tqdm>=4.66.5",
    "timm>=1.0.11",
    "cyclopts>=2.9.9",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pre-commit>=4.0.1",
    "pytest>=8.3.3",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
]

[project.scripts]
boltz = "boltz.training.experiment:app"

# ------------------------------------- Testing ----------------------------------------

[tool.pytest.ini_options]
addopts = [
  "-ra",
  "--cov",
  "--cov-config=pyproject.toml",
  "--import-mode=importlib",
  "--color=yes",
]
minversion = "7.0"
norecursedirs = "__pycache__"
testpaths = [
  "tests/unit",
  "tests/integration",
]

[tool.coverage.run]
source = [
  "src",
]
omit = [
  "*/__init__.py",
  "*/__main__.py",
  "*/test_*.py",
]

[tool.coverage.report]
fail_under = 70
show_missing = true
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",

  # Don't complain about missing debug-only code:
  "def __repr__",
  "if self.debug",

  # Don't complain if tests don't hit defensive assertion code:
  "raise AssertionError",
  "raise NotImplementedError",

  # Don't complain if non-runnable code isn't run:
  "if 0:",
  "if __name__ == .__main__.:",
]
